branches:
  except:
    - dev
language: cpp
matrix:
  include:
    - name: "linux-x64"
      os: linux
      dist: bionic
      env: EXTRA_FLAGS='target_cpu="x64"'
    - name: "linux-x86"
      os: linux
      dist: bionic
      env: EXTRA_FLAGS='target_cpu="x86"'
    - name: "linux-arm64"
      os: linux
      dist: bionic
      env: EXTRA_FLAGS='target_cpu="arm64"'
    - name: "linux-arm"
      os: linux
      dist: bionic
      env: EXTRA_FLAGS='target_cpu="arm"'
    - name: "openwrt-mipsel_24kc"
      os: linux
      dist: bionic
      env: EXTRA_FLAGS='
             target_cpu="mipsel"
             mips_arch_variant="r2" mips_float_abi="soft" mips_tune="24kc"
             use_allocator="none" use_allocator_shim=false
             use_lld=false use_gold=false
             ldso_path="/lib/ld-musl-mipsel-sf.so.1"
             custom_toolchain="//build/toolchain/linux:clang_mipsel_openwrt"'
           OPENWRT_FLAGS='arch=mipsel_24kc release=19.07.3 gcc_ver=7.5.0 target=ramips subtarget=rt305x abi=musl'
    - name: "openwrt-x86_64"
      os: linux
      dist: bionic
      env: EXTRA_FLAGS='
             target_cpu="x64"
             use_allocator="none" use_allocator_shim=false
             custom_toolchain="//build/toolchain/linux:clang_x64_openwrt"'
           OPENWRT_FLAGS='arch=x86_64 release=19.07.3 gcc_ver=7.5.0 target=x86 subtarget=64 abi=musl'
    - name: "openwrt-arm64"
      os: linux
      dist: bionic
      env: EXTRA_FLAGS='
             target_cpu="arm64"
             use_allocator="none" use_allocator_shim=false
             custom_toolchain="//build/toolchain/linux:clang_arm64_openwrt"'
           OPENWRT_FLAGS='arch=aarch64 release=19.07.3 gcc_ver=7.5.0 target=armvirt subtarget=64 abi=musl'
    - name: "openwrt-arm_cortex-a15_neon-vfpv4"
      os: linux
      dist: bionic
      env: EXTRA_FLAGS='
             target_cpu="arm"
             arm_version=0 arm_cpu="cortex-a15" arm_fpu="neon-vfpv4" arm_float_abi="hard"
             use_allocator="none" use_allocator_shim=false
             custom_toolchain="//build/toolchain/linux:clang_arm_openwrt"'
           OPENWRT_FLAGS='arch=arm_cortex-a15_neon-vfpv4 release=19.07.3 gcc_ver=7.5.0 target=ipq806x subtarget=generic abi=musl_eabi'
    - name: "openwrt-arm_cortex-a9"
      os: linux
      dist: bionic
      env: EXTRA_FLAGS='
             target_cpu="arm"
             arm_version=0 arm_cpu="cortex-a9" arm_float_abi="soft" arm_use_neon=false
             use_allocator="none" use_allocator_shim=false
             custom_toolchain="//build/toolchain/linux:clang_arm_openwrt"'
           OPENWRT_FLAGS='arch=arm_cortex-a9 release=19.07.3 gcc_ver=7.5.0 target=bcm53xx subtarget=generic abi=musl_eabi'
    - name: "osx"
      os: osx
      osx_image: xcode11.3
addons:
  apt:
    packages:
      - ninja-build
      - pkg-config
      - libnss3-dev
      - qemu-user
  homebrew:
    packages:
      - ninja
      - ccache
cache:
  directories:
    - $HOME/.ccache
    - src/out/sysroot-build/openwrt
script:
  - ./tools/import-upstream.sh
  - ( cd src; ./get-clang.sh )
  - ccache -s
  - ( cd src; ./build.sh )
  - ccache -s
  - ./tests/basic.sh src/out/Release/naive
  - export BUILD_NAME="naiveproxy-$TRAVIS_BRANCH-$TRAVIS_JOB_NAME"
  - mkdir $BUILD_NAME
  - cp src/out/Release/naive src/config.json LICENSE USAGE.txt $BUILD_NAME
  - tar cJf $BUILD_NAME.tar.xz $BUILD_NAME
deploy:
  provider: releases
  api_key:
    secure: lRbJ0suDRZ6eBvuB2sdoo2WCX/Ta9T2boJTAQ1Kz5Z56Na6O+RbZy1Ak2IXkwmT7jfzMFEQ9vPifXI8hcfSECZ9bd6rj0ZvYnFfvtgLjU0P/yNt36FLWuhN+T/dybOuuW74hkIDUm0pm5gTF2OMn1dC9PnIZONt5PNrQydX9BQWo4LSGGbUtwUPg2zXnGU34P3vZLghDJVbt3smFlw9vhuMoH6RbIT9kkB63HGs1GXbLAeswyMtKr3HxFoUNSSCKYoOT8X8LZBXneYhTIkN5F346gcKdzN4Th9MyziqZEMjiaAq5LsYEzKtfNt/JEAtH2W5eOgPa6O8MswzF8ZVoDYFCxlH8ivwRT5xKm9TcH3IiuDAWpL0AOSZkE1ojrlfwReoPntklDHAEKjnyFtVup/t1czyEE8SDIAHcgjsTczWIskQJaUcDq5xwVcOdWn0el5nMVbqns81WzgtviN4O1jEGUjvWs1ngksbQ847z+utNNCYerOpmHpfJZq//PrxAcXJAlIwruxLFHr3mG4UcFB1yzFmqVytJmhw0Ju0obhOWYT5cXdzxsfNlRZamfevCdKQjJjvwrXQMat2HDK1CUMGcrjmi+Bu7t34+YctwlvkoqNK3hkK2apC1CMhZSZqz7IrMDBHnBGTC62hdLcIiJmK2yF6xDwMi6Nvrfxe4vWs=
  file: $BUILD_NAME.tar.xz
  skip_cleanup: true
  name: $TRAVIS_BRANCH
  prerelease: true
  on:
    tags: true
    all_branches: true
